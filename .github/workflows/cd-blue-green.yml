name: CD-Blue-Green

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'k8s/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download image tag artifact
        uses: actions/download-artifact@v3
        with:
          name: image_tag

      - name: Read image tag
        id: image_tag
        run: |
          IMAGE_TAG=$(cat image_tag.txt)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - name: Deploy green environment
        run: |
          sed -i "s|<REGISTRY>/<REPO>:green|${{ secrets.REGISTRY_URL }}/${{ secrets.REPO_NAME }}:${{ env.IMAGE_TAG }}|g" k8s/deployment-green.yaml
          kubectl apply -f k8s/deployment-green.yaml

      - name: Wait for green rollout
        run: |
          kubectl rollout status deployment/myapp-green --timeout=60s

      - name: Switch Service to green
        run: |
          sed -i "s/version: blue/version: green/g" k8s/service.yaml
          kubectl apply -f k8s/service.yaml

      - name: Commit updated manifests back to the repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/deployment-green.yaml k8s/service.yaml
          git commit -m "Update deployment to green: ${{ env.IMAGE_TAG }}"
          git push

      - name: Scale down blue deployment
        run: |
          kubectl scale deployment/myapp-blue --replicas=0

