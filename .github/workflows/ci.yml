name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Run tests (unittest)
        run: |
          python -m unittest discover app/tests

  build-and-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write JSON key to file
        env:
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          echo "$REGISTRY_PASSWORD" > key.json

      - name: Debug secret output (NOT RECOMMENDED)
        env:
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          echo key.json

      - name: Docker Login
        run: cat key.json | docker login -u _json_key --password-stdin europe-north1-docker.pkg.dev

      - name: Confirm Docker Login
        run: "echo Docker login successful. Registry: ${{ secrets.REGISTRY_URL }} Repository: ${{ secrets.REPO_NAME }}"

      - name: Build image
        run: |
          docker build -t ${{ secrets.REGISTRY_URL }}/${{ secrets.REPO_NAME }}:${{ github.sha }} .
      
      - name: Push image
        run: |
          docker push ${{ secrets.REGISTRY_URL }}/${{ secrets.REPO_NAME }}:${{ github.sha }}

      - name: Update image tag file (for CD)
        run: |
          echo "IMAGE_TAG=${{ github.sha }}" > image_tag.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: image_tag
          path: image_tag.txt

